-- 오프라인/온라인 판매 데이터 통합하기
-- https://school.programmers.co.kr/learn/courses/30/lessons/131537

--- DDL
CREATE TABLE ONLINE_SALE (
    ONLINE_SALE_ID INTEGER NOT NULL PRIMARY KEY,
    USER_ID INTEGER NOT NULL,
    PRODUCT_ID INTEGER NOT NULL,
    SALES_AMOUNT INTEGER NOT NULL,
    SALES_DATE DATE NOT NULL
);

CREATE TABLE OFFLINE_SALE (
    OFFLINE_SALE_ID INTEGER NOT NULL PRIMARY KEY,
    PRODUCT_ID INTEGER NOT NULL,
    SALES_AMOUNT INTEGER NOT NULL,
    SALES_DATE DATE NOT NULL
);
---

--- DML(INSERT)
INSERT INTO ONLINE_SALE(ONLINE_SALE_ID, USER_ID, PRODUCT_ID, SALES_AMOUNT, SALES_DATE)
VALUES(1, 1, 3, 2, '2022-02-25'),
      (2, 4, 4, 1, '2022-03-01'),
      (4, 2, 2, 2, '2022-03-02'),
      (3, 6, 3, 3, '2022-03-02'),
      (5, 5, 5, 1, '2022-03-03'),
      (6, 5, 7, 1, '2022-04-06');

INSERT INTO OFFLINE_SALE(OFFLINE_SALE_ID, PRODUCT_ID, SALES_AMOUNT, SALES_DATE)
VALUES(1, 1, 2, '2022-02-21'),
      (4, 1, 2, '2022-03-01'),
      (3, 3, 3, '2022-03-01'),
      (2, 4, 1, '2022-03-01'),
      (5, 2, 1, '2022-03-03'),
      (6, 2, 1, '2022-04-01');
---

--- DML(SELECT)
SELECT DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, PRODUCT_ID, USER_ID, SALES_AMOUNT
FROM ONLINE_SALE
WHERE SALES_DATE BETWEEN '2022-03-01' AND '2022-03-31'
UNION ALL
SELECT SLAES_DATE, PRODUCT_ID, NULL AS USER_ID, SALES_AMOUNT
FROM OFFLINE_SALE
WHERE SALES_DATE BETWEEN '2022-03-01' AND '2022-03-31'
ORDER BY SALES_DATE ASC, PRODUCT_ID ASC, USER_ID ASC;

---